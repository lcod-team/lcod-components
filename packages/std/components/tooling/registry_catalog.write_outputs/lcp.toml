schemaVersion = "2.0"
id = "lcod://tooling/registry_catalog/write_outputs@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Persist registry artefacts when their content changes."

[palette]
category = "Registry"
icon = "mdi:database-export"
tags = [ "catalog", "io" ]

[deps]
requires = [
  "lcod://impl/set@1",
  "lcod://flow/if@1",
  "lcod://axiom/path/join@1",
  "lcod://tooling/json/stringify@0.1.0",
  "lcod://tooling/string/ensure_trailing_newline@0.1.0",
  "lcod://tooling/fs/write_if_changed@0.1.0"
]

[inputs.rootPath]
summary = "Directory where artefacts are written."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.packagesJsonl]
summary = "JSON Lines catalogue content to write."
required = true
schema = """
{
  "type": "string"
}"""

[inputs.registryJson]
summary = "Registry descriptor serialised with indentation."
required = true
schema = """
{
  "type": "object"
}"""

[inputs.packagesFilename]
summary = "Override for the JSONL filename."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.registryFilename]
summary = "Override for the JSON filename."
required = false
schema = """
{
  "type": "string"
}"""

[outputs.updates]
summary = "Flags indicating which files were rewritten."
schema = """
{
  "type": "object"
}"""

[documentation]
body = "Persist registry artefacts when their content changes."

[docs]
readme = "README.md"
