schemaVersion = "2.0"
id = "lcod://tooling/registry_catalog/validate@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Validate the registry catalog against structural and manifest rules."

[palette]
category = "Registry"
icon = "mdi:clipboard-check-outline"
tags = [ "catalog", "validation" ]

[deps]
requires = [
  "lcod://impl/set@1",
  "lcod://flow/if@1",
  "lcod://flow/foreach@1",
  "lcod://tooling/json/read_file@0.1.0",
  "lcod://tooling/value/is_array@0.1.0",
  "lcod://tooling/value/is_string_nonempty@0.1.0",
  "lcod://tooling/array/append@0.1.0",
  "lcod://tooling/array/flatten@0.1.0",
  "lcod://tooling/array/pluck@0.1.0",
  "lcod://tooling/array/find_duplicates@0.1.0",
  "lcod://tooling/registry_catalog/validate_package@0.1.0"
]

[inputs.rootPath]
summary = "Base directory used to resolve catalog and package files."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.catalogPath]
summary = "Path to catalog.json relative to rootPath."
required = false
schema = """
{
  "type": "string"
}"""

[outputs.errors]
summary = "Validation errors (empty array means the catalogue is valid)."
schema = """
{
  "type": "array"
}"""

[outputs.packages]
summary = "Per-package diagnostics produced during validation."
schema = """
{
  "type": "array"
}"""

[documentation]
body = "Validate the registry catalog against structural and manifest rules."

[docs]
readme = "README.md"
