schemaVersion = "2.0"
id = "lcod://tooling/mcp/component/scaffold@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Generate a minimal LCOD component skeleton (descriptor, compose, docs) inside a workspace."

[palette]
category = "Authoring"
icon = "mdi:application-brackets-outline"
tags = [ "mcp", "component", "scaffold" ]

[deps]
requires = [
  "lcod://tooling/script@1",
  "lcod://axiom/path/join@1",
  "lcod://axiom/fs/write-file@1"
]

[inputs.workspacePath]
summary = "Workspace directory created for the session (output of `tooling/mcp/session/open@0.1.0`)."
required = true
schema = """
{
  "type": "string"
}"""

[inputs.componentId]
summary = "Component identifier in the form `lcod://namespace/name@version`."
required = true
schema = """
{
  "type": "string"
}"""

[inputs.summary]
summary = "Optional summary stored in `lcp.toml` and README."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.palette]
summary = "Optional palette overrides (`category`, `icon`, `tags`)."
required = false
schema = """
{
  "type": "object"
}"""

[outputs.componentPath]
summary = "Root directory where the component files were generated."
schema = """
{
  "type": "string"
}"""

[outputs.descriptorPath]
summary = "Path to the generated `lcp.toml` descriptor."
schema = """
{
  "type": "string"
}"""

[outputs.composePath]
summary = "Path to the generated `compose.yaml`."
schema = """
{
  "type": "string"
}"""

[outputs.readmePath]
summary = "Path to `docs/README.md`."
schema = """
{
  "type": "string"
}"""
