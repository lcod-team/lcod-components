schemaVersion = "2.0"
id = "lcod://tooling/registry_catalog/collect@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Collect registry metadata into JSONL and JSON descriptors."

[palette]
category = "Registry"
icon = "mdi:database-cog-outline"
tags = [ "catalog", "registry" ]

[deps]
requires = [
  "lcod://impl/set@1",
  "lcod://flow/if@1",
  "lcod://flow/foreach@1",
  "lcod://tooling/json/read_file@0.1.0",
  "lcod://tooling/registry_catalog/normalize_catalog@0.1.0",
  "lcod://tooling/registry_catalog/normalize_registry@0.1.0",
  "lcod://tooling/registry_catalog/normalize_package@0.1.0",
  "lcod://tooling/registry_catalog/normalize_versions_doc@0.1.0",
  "lcod://tooling/registry_catalog/normalize_version@0.1.0",
  "lcod://tooling/registry_catalog/packages_map@0.1.0",
  "lcod://tooling/array/pluck@0.1.0",
  "lcod://tooling/array/compact@0.1.0",
  "lcod://tooling/array/flatten@0.1.0",
  "lcod://tooling/jsonl/from_objects@0.1.0"
]

[inputs.rootPath]
summary = "Base directory used to resolve relative catalog and versions files."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.catalogPath]
summary = "Path to catalog.json relative to rootPath."
required = false
schema = """
{
  "type": "string"
}"""

[outputs.packagesJsonl]
summary = "JSON Lines document describing registries and components."
schema = """
{
  "type": "string"
}"""

[outputs.registryJson]
summary = "Registry descriptor ready to be written to registry.json."
schema = """
{
  "type": "object"
}"""

[outputs.packages]
summary = "Per-package diagnostics (versions metadata)."
schema = """
{
  "type": "array"
}"""

[outputs.warnings]
summary = "Non-fatal issues encountered during collection."
schema = """
{
  "type": "array"
}"""

[documentation]
body = "Collect registry metadata into JSONL and JSON descriptors."

[docs]
readme = "README.md"
