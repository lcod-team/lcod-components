schemaVersion = "2.0"
id = "lcod://tooling/registry_catalog/refresh@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Collect and validate registry data, ready to publish artefacts."

[palette]
category = "Registry"
icon = "mdi:database-refresh"
tags = [ "catalog", "pipeline" ]

[deps]
requires = [
  "lcod://impl/set@1",
  "lcod://flow/if@1",
  "lcod://tooling/array/flatten@0.1.0",
  "lcod://tooling/registry_catalog/collect@0.1.0",
  "lcod://tooling/registry_catalog/validate@0.1.0"
]

[inputs.rootPath]
summary = "Base directory used to resolve catalogue files."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.catalogPath]
summary = "Path to catalog.json relative to rootPath."
required = false
schema = """
{
  "type": "string"
}"""

[outputs.packagesJsonl]
summary = "JSON Lines catalogue emitted by the collect step."
schema = """
{
  "type": "string"
}"""

[outputs.registryJson]
summary = "Registry descriptor ready to be written to registry.json."
schema = """
{
  "type": "object"
}"""

[outputs.packages]
summary = "Collect step diagnostics (per package)."
schema = """
{
  "type": "array"
}"""

[outputs.warnings]
summary = "Non-fatal issues reported during collection."
schema = """
{
  "type": "array"
}"""

[outputs.errors]
summary = "Validation errors (empty array means success)."
schema = """
{
  "type": "array"
}"""

[outputs.validation]
summary = "Per-package validation diagnostics."
schema = """
{
  "type": "array"
}"""

[documentation]
body = "Collect and validate registry data, ready to publish artefacts."
