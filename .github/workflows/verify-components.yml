name: Verify Components

on:
  push:
  pull_request:

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
      LCOD_RESOLVER_PATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4

      - name: Checkout lcod-spec
        uses: actions/checkout@v4
        with:
          repository: lcod-team/lcod-spec
          path: spec

      - name: Checkout lcod-resolver
        uses: actions/checkout@v4
        with:
          repository: lcod-team/lcod-resolver
          path: resolver

      - name: Checkout lcod-kernel-rs
        uses: actions/checkout@v4
        with:
          repository: lcod-team/lcod-kernel-rs
          path: kernel

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install repo dependencies
        run: npm install --no-fund --no-audit

      - name: Install spec dependencies
        working-directory: spec
        run: npm install --no-fund --no-audit

      - name: Prepare runtime bundle
        working-directory: spec
        run: node scripts/package-runtime.mjs --label ci --resolver ../resolver

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build lcod-run (embedded runtime)
        working-directory: kernel
        env:
          LCOD_EMBED_RUNTIME: ${{ github.workspace }}/spec/dist/runtime/lcod-runtime-ci.tar.gz
        run: cargo build --release --bin lcod_run

      - name: Run metadata verification
        run: kernel/target/release/lcod-run --project packages/std --compose tests/components.verify.metadata.yaml

      - name: Run registry component tests
        run: kernel/target/release/lcod-run --project packages/std --compose tests/components.registry.yaml

      - name: Run component unit tests
        run: kernel/target/release/lcod-run --project packages/std --compose tests/components.registry.tests.yaml

      - name: Export components manifest
        run: npm run export:components

      - name: Ensure manifest is up to date
        run: |
          if git diff --quiet registry/components.std.json; then
            echo "components.std.json is up to date"
          else
            echo "::error::registry/components.std.json is out of date. Run 'npm run export:components' locally and commit the changes." >&2
            git diff registry/components.std.json
            exit 1
          fi
